controller_manager:
  ros__parameters:
    update_rate: 100  # H
    use_sim_time: true

    joint_state_broadcaster:
      type: joint_state_broadcaster/JointStateBroadcaster

    mobile_base_controller:
      type: diff_drive_controller/DiffDriveController

# mobile_base_controller:
#   ros__parameters:
#     publish_rate: 50.0
#     base_frame_id: base_link

#     # left_wheel: ["drivewhl_l_front_joint", "drivewhl_l_back_joint"]
#     # right_wheel: ["drivewhl_r_front_joint", "drivewhl_r_back_joint"]
#     left_wheel: ["drivewhl_l_front_joint"]
#     right_wheel: ["drivewhl_r_front_joint"]
#     pose_covariance_diagonal: [0.001, 0.001, 1000000.0, 1000000.0, 1000000.0, 0.03]
#     twist_covariance_diagonal: [0.001, 0.001, 0.001, 1000000.0, 1000000.0, 0.03]
#     cmd_vel_timeout: 0.25

#     # Odometry fused with IMU is published by robot_localization, so
#     # no need to publish a TF based on encoders alone.
#     enable_odom_tf: false

#     # Wheel separation and radius multipliers
#     wheel_separation_multiplier: 1.0 # default: 1.0
#     wheel_radius_multiplier    : 1.0 # default: 1.0

#     # Velocity and acceleration limits
#     # Whenever a min_* is unspecified, default to -max_*
#     linear:
#       x:
#         has_velocity_limits    : true
#         max_velocity           : 2.0   # m/s
#         has_acceleration_limits: true
#         max_acceleration       : 20.0   # m/s^2
#     angular:
#       z:
#         has_velocity_limits    : true
#         max_velocity           : 4.0   # rad/s
#         has_acceleration_limits: true
#         max_acceleration       : 25.0   # rad/s^2



mobile_base_controller:
  ros__parameters:

    # left_wheel: ["drivewhl_l_front_joint", "drivewhl_l_back_joint"]
    # right_wheel: ["drivewhl_r_front_joint", "drivewhl_r_back_joint"]
    left_wheel_names: ["drivewhl_l_front_joint"]
    right_wheel_names: ["drivewhl_r_front_joint"]
 
    wheel_separation: 0.18
    #wheels_per_side: 1  # actually 2, but both are controlled by 1 signal
    wheel_radius: 0.1
 
    wheel_separation_multiplier: 1.0
    left_wheel_radius_multiplier: 1.0
    right_wheel_radius_multiplier: 1.0
 
    publish_rate: 50.0
    odom_frame_id: odom
    base_frame_id: base_link
    pose_covariance_diagonal : [0.001, 0.001, 0.001, 0.001, 0.001, 0.01]
    twist_covariance_diagonal: [0.001, 0.001, 0.001, 0.001, 0.001, 0.01]
 
    open_loop: true
    enable_odom_tf: false
 
    cmd_vel_timeout: 0.5
    #publish_limited_velocity: true
    use_stamped_vel: false
    #velocity_rolling_window_size: 10
 
    # Preserve turning radius when limiting speed/acceleration/jerk
    preserve_turning_radius: true
 
    # Publish limited velocity
    publish_cmd: true
    cmd_vel: true
 
    # Publish wheel data
    publish_wheel_data: true
 
    # Velocity and acceleration limits
    # Whenever a min_* is unspecified, default to -max_*
    linear.x.has_velocity_limits: true
    linear.x.has_acceleration_limits: true
    linear.x.has_jerk_limits: false
    linear.x.max_velocity: 1.0
    linear.x.min_velocity: -1.0
    linear.x.max_acceleration: 1.0
    linear.x.max_jerk: 0.0
    linear.x.min_jerk: 0.0
 
    angular.z.has_velocity_limits: true
    angular.z.has_acceleration_limits: true
    angular.z.has_jerk_limits: false
    angular.z.max_velocity: 1.0
    angular.z.min_velocity: -1.0
    angular.z.max_acceleration: 1.0
    angular.z.min_acceleration: -1.0
    angular.z.max_jerk: 0.0
    angular.z.min_jerk: 0.0

# mobile_base_controller:
#   ros__parameters:
#     left_wheel_names: ["drivewhl_l_front_joint"]
#     right_wheel_names: ["drivewhl_r_front_joint"]
#     publish_rate: 50.0
#     pose_covariance_diagonal: [0.001, 0.001, 1000000.0, 1000000.0, 1000000.0, 0.03]
#     twist_covariance_diagonal: [0.001, 0.001, 0.001, 1000000.0, 1000000.0, 0.03]
#     cmd_vel_timeout: 0.25

#     # Odometry fused with IMU is published by robot_localization, so
#     # no need to publish a TF based on encoders alone.
#     enable_odom_tf: false

#     # Wheel separation and radius multipliers
#     wheel_separation_multiplier: 1.5 # default: 1.0
#     wheel_radius_multiplier    : 1.0 # default: 1.0

#     # Velocity and acceleration limits
#     # Whenever a min_* is unspecified, default to -max_*
#     linear:
#       x:
#         has_velocity_limits    : true
#         max_velocity           : 2.0   # m/s
#         has_acceleration_limits: true
#         max_acceleration       : 20.0   # m/s^2
#     angular:
#       z:
#         has_velocity_limits    : true
#         max_velocity           : 4.0   # rad/s
#         has_acceleration_limits: true
#         max_acceleration       : 25.0   # rad/s^2